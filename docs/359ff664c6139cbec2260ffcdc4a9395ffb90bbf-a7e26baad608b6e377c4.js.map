{"version":3,"sources":["webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js"],"names":["assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","isSpace","state","startLine","endLine","silent","marker","cnt","ch","token","bMarks","tShift","max","eMarks","sCount","blkIndent","src","charCodeAt","line","markup","String","fromCharCode","Any","Cc","Cf","P","Z","normalizeReference","_endLine","destEndPos","destEndLineNo","href","i","l","label","labelEnd","oldParentType","res","terminate","terminatorRules","title","lines","nextLine","lineMax","md","block","ruler","getRules","parentType","isEmpty","getLines","trim","helpers","parseLinkDestination","ok","normalizeLink","validateLink","parseLinkTitle","env","references","encode","decode","format","parse","Url","protocol","slashes","auth","port","hostname","hash","pathname","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","unshift","qm","u","disableNested","level","found","prevPos","posMax","oldPos","inline","skipToken","unescapeAll","code","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","tokenize","forwardRef","p","ref","createElement","className","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","escaped","entity","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","newElements","isWhiteSpace","isMdAsciiPunct","isPunctChar","toUpperCase","tmp","skipSpacesBack","skipCharsBack","content","utils","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","core","renderer","linkify","configure","presets","components","rules","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","State","process","tokens","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","attrPush","attrData","attrSet","attrGet","attrJoin","StateInline","outTokens","tokens_meta","pending","pendingLevel","cache","delimiters","_prev_delimiters","pushPending","token_meta","pop","scanDelims","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","root","nodeType","freeGlobal","global","window","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","error","RangeError","array","fn","mapDomain","string","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","out","basic","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","splice","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","skipChars","skipSpaces","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","curr","last","EMAIL_RE","AUTOLINK_RE","linkMatch","emailMatch","fullUrl","pmax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","at","opt","before","beforeName","ruleName","after","afterName","chainName","matchStart","matchEnd","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","min","markTightParagraphs","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","parseLinkLabel","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","lineText","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","ESCAPED","StateCore","hasEmptyLines","skipEmptyLines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","jump","open","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","tableLines","tbodyLines","decodeCache","exclude","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","startDelim","endDelim","loneMarkers","scanned","labelStart","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","urlText","links","blockTokens","tok","Core","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","blkIdx","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","isTerminatorChar","params","mem","haveEndMarker","lc","isLetter","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","isStrong","parseReference"],"mappings":"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","file":"359ff664c6139cbec2260ffcdc4a9395ffb90bbf-a7e26baad608b6e377c4.js","sourcesContent":["'use strict'; ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;","// Horizontal rule\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};","'use strict';\n\nmodule.exports = require('./lib/');","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc = require('./categories/Cc/regex');\nexports.Cf = require('./categories/Cf/regex');\nexports.P = require('./categories/P/regex');\nexports.Z = require('./categories/Z/regex');","'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};","'use strict';\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse = require('./parse');","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'meta', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","// Parse link destination\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code,\n      level,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","// Block quotes\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos++) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  } // set offset past spaces and \">\"\n\n\n  initial = offset = state.sCount[startLine] + 1; // skip one optional space after '>'\n\n  if (state.src.charCodeAt(pos) === 0x20\n  /* space */\n  ) {\n      // ' >   test '\n      //     ^ -- position start of line here:\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n      spaceAfterMarker = true;\n    } else if (state.src.charCodeAt(pos) === 0x09\n  /* tab */\n  ) {\n      spaceAfterMarker = true;\n\n      if ((state.bsCount[startLine] + offset) % 4 === 3) {\n        // '  >\\t  test '\n        //       ^ -- position start of line here (tab has width===1)\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n      } else {\n        // ' >\\t  test '\n        //    ^ -- position start of line here + shift bsCount slightly\n        //         to make extra space appear\n        adjustTab = true;\n      }\n    } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [state.bMarks[startLine]];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [state.bsCount[startLine]];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n  lastLineEmpty = pos >= max;\n  oldSCount = [state.sCount[startLine]];\n  state.sCount[startLine] = offset - initial;\n  oldTShift = [state.tShift[startLine]];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote'; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !isOutdented) {\n      // This line is inside the blockquote.\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1; // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            offset++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","// Utilities\n//\n'use strict';\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex'); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = require('mdurl');\nexports.lib.ucmicro = require('uc.micro');\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;","// heading (#, ##, ...)\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};","// Main parser class\n'use strict';\n\nvar utils = require('./common/utils');\n\nvar helpers = require('./helpers');\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar LinkifyIt = require('linkify-it');\n\nvar mdurl = require('mdurl');\n\nvar punycode = require('punycode');\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  } // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n\n\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;","// Token class\n'use strict';\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;","// Inline parser state\n'use strict';\n\nvar Token = require('../token');\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.cache = {}; // List of emphasis-like delimiters for current tag\n\n  this.delimiters = []; // Stack of delimiter lists for upper level tags\n\n  this._prev_delimiters = [];\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n\n    this._prev_delimiters.push(this.delimiters);\n\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'text_collapse']\n    }\n  }\n};","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\nmodule.exports = function text_collapse(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};","// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\nmodule.exports = function autolink(state, silent) {\n  var tail,\n      linkMatch,\n      emailMatch,\n      url,\n      fullUrl,\n      token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) {\n    return false;\n  }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};","'use strict';\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};","'use strict';\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};","// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'text_collapse']\n    }\n  }\n};","// Paragraph\n'use strict';\n\nmodule.exports = function paragraph(state, startLine\n/*, endLine*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;","// Parse backticks\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      matchStart,\n      matchEnd,\n      token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += marker;\n  }\n\n  state.pos += marker.length;\n  return true;\n};","// Lists\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n\n\n  if (state.listIndent >= 0 && state.sCount[startLine] - state.listIndent >= 4 && state.sCount[startLine] < state.blkIndent) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately\n\n  if (silent) {\n    return true;\n  } // Start list\n\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [startLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [startLine, 0]; // change current state, then restore it after parser subcall\n\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine]; //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // if it's indented more than 3 spaces, it should be a code block\n\n\n    if (state.sCount[startLine] - state.blkIndent >= 4) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;","// Normalize input string\n'use strict'; // https://spec.commonmark.org/0.29/#line-ending\n\nvar NEWLINES_RE = /\\r\\n?|\\n/g;\nvar NULL_RE = /\\0/g;\n\nmodule.exports = function normalize(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\nvar Ruler = require('./ruler'); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['strikethrough', require('./rules_inline/strikethrough').tokenize], ['emphasis', require('./rules_inline/emphasis').tokenize], ['link', require('./rules_inline/link')], ['image', require('./rules_inline/image')], ['autolink', require('./rules_inline/autolink')], ['html_inline', require('./rules_inline/html_inline')], ['entity', require('./rules_inline/entity')]];\nvar _rules2 = [['balance_pairs', require('./rules_inline/balance_pairs')], ['strikethrough', require('./rules_inline/strikethrough').postProcess], ['emphasis', require('./rules_inline/emphasis').postProcess], ['text_collapse', require('./rules_inline/text_collapse')]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\nmodule.exports = ParserInline;","// Just a shortcut for bulk export\n'use strict';\n\nexports.parseLinkLabel = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle = require('./parse_link_title');","// Regexps to match html elements\n'use strict';\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) {\n      return false;\n    }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23\n    /* # */\n    ) {\n        match = state.src.slice(pos).match(DIGITAL_RE);\n\n        if (match) {\n          if (!silent) {\n            code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n            state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) {\n            state.pending += entities[match[1]];\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) {\n    state.pending += '&';\n  }\n\n  state.pos++;\n  return true;\n};","// HTML block\n'use strict';\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;","// Process escaped chars and hardbreaks\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) {\n      return false;\n    }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) {\n        state.pending += state.src[pos];\n      }\n\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++; // skip leading whitespaces from next line\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += '\\\\';\n  }\n\n  state.pos++;\n  return true;\n};","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', require('./rules_block/table'), ['paragraph', 'reference']], ['code', require('./rules_block/code')], ['fence', require('./rules_block/fence'), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'reference', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'reference', 'blockquote']], ['reference', require('./rules_block/reference')], ['heading', require('./rules_block/heading'), ['paragraph', 'reference', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['html_block', require('./rules_block/html_block'), ['paragraph', 'reference', 'blockquote']], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        break;\n      }\n    } // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = require('./rules_block/state_block');\nmodule.exports = ParserBlock;","module.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\nvar assign = require('./common/utils').assign;\n\nvar unescapeAll = require('./common/utils').unescapeAll;\n\nvar escapeHtml = require('./common/utils').escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted,\n      i,\n      arr,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;","// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","// Parser state class\n'use strict';\n\nvar Token = require('../token');\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx,\n      openerIdx,\n      closer,\n      opener,\n      minOpenerIdx,\n      newMinOpenerIdx,\n      isOddMatch,\n      lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx]; // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n\n    closer.length = closer.length || 0;\n    if (!closer.close) continue; // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open && opener.end < 0) {\n        isOddMatch = false; // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? delimiters[openerIdx - 1].jump + 1 : 0;\n          closer.jump = closerIdx - openerIdx + lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.jump = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// GFM table, https://github.github.com/gfm/#tables-extension-\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c\n    /* | */\n    ) {\n        if (!isEscaped) {\n          // pipe separating cells, '|'\n          result.push(current + str.substring(lastPos, pos));\n          current = '';\n          lastPos = pos + 1;\n        } else {\n          // escaped pipe, '\\|'\n          current += str.substring(lastPos, pos - 1);\n          lastPos = pos;\n        }\n      }\n\n    isEscaped = ch === 0x5c\n    /* \\ */\n    ;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch !== 0x7C\n  /* | */\n  && ch !== 0x2D\n  /* - */\n  && ch !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop(); // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n\n  columnCount = columns.length;\n\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table'; // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (!lineText) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [startLine + 2, 0];\n    }\n\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [nextLine, nextLine + 1];\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};","// markdown-it default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","// ~~strike through~~\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      jump: i,\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map = [startLine, state.line];\n  return true;\n};","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};","module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};","'use strict';\n\nmodule.exports = function (opts) {\n  var re = {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z = require('uc.micro/categories/Z/regex').source;\n  re.src_P = require('uc.micro/categories/P/regex').source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n  // github has ... in commit range links,\n  // Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // - params separator\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]).|' + (opts && opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + '\\\\,(?!' + re.src_ZCc + ').|' + // allow `,,,` in paths\n  '\\\\!+(?!' + re.src_ZCc + '|[!]).|' + // allow `!!!` in paths, but not at the end\n  '\\\\?(?!' + re.src_ZCc + '|[?]).' + ')+' + '|\\\\/' + ')?'; // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' + '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\") // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = require('entities/lib/maps/entities.json');","// fences (``` lang, ~~~ lang)\n'use strict';\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60\n  /* ` */\n  ) {\n      if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n        return false;\n      }\n    } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};","// Process html tags\n'use strict';\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;","// Process *this* and _that_\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump: i,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && delimiters[i - 1].token === startDelim.token - 1 && delimiters[startDelim.end + 1].token === endDelim.token + 1 && delimiters[i - 1].marker === startDelim.marker;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.md.inline.tokenize(state);\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};"],"sourceRoot":""}